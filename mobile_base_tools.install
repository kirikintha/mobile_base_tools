<?php
/**
 * Define install constants
 */
//Set your module name here. This has to stay here, because the install does not invoke the whole module and playing around with includes is not a good idea on install
define('INSTALL_MODULE_NAME', 'Mobile Base Tools');

/**
 * Implementation of hook_install.
 */
function mobile_base_tools_install() {
  //Set a message when we install the module
  drupal_set_message( t('@module module has installed successfully. Please see README.txt for more information on this module.', array( '@module' => INSTALL_MODULE_NAME ) ) );
}

/**
 * Implementation of hook_uninstall.
 */
function mobile_base_tools_uninstall() {
  variable_del('mobile_base_tools_settings');
  //Set a message when we uninstall the module.
  drupal_set_message( t('@module module uninstalled successfully.', array( '@module' => INSTALL_MODULE_NAME ) ) );
}

/**
 * Implementation of hook_enable.
 */
function mobile_base_tools_enable() {
  //Ranges to look for, to define a resolution.
  $settings['resolutions']['thresholds']['ranges'] = array(160,220,320,480,600,768);
  //When we get the number by intersecting a range of resolutios, we need to get our resolution by looking up the key from above.
  $settings['resolutions']['thresholds']['lookup'] = array(
    160 => '160x128',
    220 => '220x176',
    320 => '320x480',
    480 => '480x854',
    600 => '600x800',
    768 => '768x1024',
  );
  //Master resolutions, not to be confused with the above thresholds this is just a list of supported resolutions for imagecache.
  $settings['resolutions']['imagecache'] = array(
    '1024x768',
    '768x1024',
    '600x800',
    '800x600',
    '480x854',
    '854x480',
    '480x320',
    '320x480',
    '240x320',
    '320x240',
    '176x220',
    '220x176',
    '128x160',
    '160x128',
  );
  variable_set('mobile_base_tools_settings', $settings);
  //Set a message when we enable the module
  drupal_set_message( t('@module module has been enabled successfully.', array( '@module' => INSTALL_MODULE_NAME ) ) );
}

/**
 * Implementation of hook_disable.
 */
function mobile_base_tools_disable() {
  //Set a message when we disable the module.
  drupal_set_message( t('@module module has been disabled successfully.', array( '@module' => INSTALL_MODULE_NAME ) ) ); 
}